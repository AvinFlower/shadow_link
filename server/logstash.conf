input {
  tcp {
    port  => 5000
    codec => plain {
      ecs_compatibility => "v1"
    }
  }
}

filter {
  # Проверяем, начинается ли сообщение с '{' - значит, скорее всего JSON
  if [message] =~ /^\s*\{/ {
    json {
      source         => "message"
      target         => "json"
      tag_on_failure => ["_jsonparsefailure"]
    }
  }

  # Если JSON не распарсился или сообщение не JSON — используем grok для парсинга стандартного лога
  if "_jsonparsefailure" in [tags] or !([message] =~ /^\s*\{/) {
    grok {
      match => {
        "message" => [
          "%{TIMESTAMP_ISO8601:timestamp}\\s+\\[%{LOGLEVEL:level}/%{DATA:thread}\\]\\s+%{GREEDYDATA:msg}",
          "%{TIMESTAMP_ISO8601:timestamp}\\s+%{LOGLEVEL:level}\\s+%{GREEDYDATA:msg}"
        ]
      }
      tag_on_failure => ["_grokparsefailure"]
    }

    # Если grok тоже не распарсил, то просто кладём оригинальное сообщение в поле msg
    if "_grokparsefailure" in [tags] {
      mutate {
        add_field => { "msg" => "%{message}" }
      }
    }
  }

  # Обрабатываем дату: берем из timestamp, если есть
  date {
    match          => ["timestamp", "ISO8601"]
    target         => "@timestamp"
    tag_on_failure => ["_dateparsefailure"]
  }

  # Добавляем поля в log.*, выбирая приоритетно данные из JSON, если они есть
  mutate {
    add_field => {
      "log.date"    => "%{@timestamp}"
      "log.level"   => "%{[json][level]}"
      "log.process" => "%{[json][logger]}"
      "log.message" => "%{[json][message]}"
    }
  }

  # Обновляем поля из grok, если JSON-поля пусты или отсутствуют
  mutate {
    update => {
      "log.level"   => "%{level}"
      "log.process" => "%{thread}"
      "log.message" => "%{msg}"
    }
  }

  # Заменяем нераспарсенные шаблоны и пустые значения дефолтами
  if ![log.level] or [log.level] == "%{level}" or [log.level] == "" {
    mutate {
      replace => { "log.level" => "INFO" }
    }
  }

  if ![log.process] or [log.process] == "%{thread}" or [log.process] == "" {
    mutate {
      replace => { "log.process" => "unknown" }
    }
  }

  # Чистим временные и лишние поля
  mutate {
    remove_field => [
      "message", "timestamp", "json", "msg", "level", "thread",
      "tags", "_jsonparsefailure", "_grokparsefailure", "_dateparsefailure",
      "@version", "host", "path"
    ]
  }
}

output {
  elasticsearch {
    hosts             => ["http://elasticsearch:9200"]
    index             => "app-logs-%{+YYYY.MM.dd}"
    ecs_compatibility  => "v1"
  }
}
